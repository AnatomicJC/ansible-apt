---
- name: Cleaning old config files
  file:
    path: "{{ item }}"
    state: absent
  with_items: "{{ apt_clean_old_config_files }}"

- name: handle Debian backports expired inRelease for old distros
  copy:
    content: |
      Acquire::Check-Valid-Until "0";
    dest: '/etc/apt/apt.conf.d/99backports'
  when: ansible_distribution == 'Debian' and ansible_distribution_major_version|int <= 8

- name: Configure /etc/apt/preferences.d/ files
  copy:
    dest: "{{ item.dest }}"
    content: "{{ item.content }}"
  with_items: "{{ apt_preferences }}"
  when: apt_preferences|length > 0

- name: Add 32-bit architecture
  copy:
    content: "amd64\ni386\n"
    dest: /var/lib/dpkg/arch
  when: apt_32_bit|bool

- name: Add ssl dependencies
  apt:
    name: ['apt-transport-https', 'ca-certificates', 'ssl-cert']
    update_cache: "{{ apt_cache_update }}"
    cache_valid_time: "{{ apt_cache_valid_time }}"
    state: present

- name: Add apt keys
  apt_key:
    data: "{{ item.content }}"
    state: present
  with_items: "{{ apt_keys }}"
  no_log: True

- name: Allow expired GPG key workaround
  copy:
    content: |
      APT::Get::AllowUnauthenticated "true";
      Acquire::AllowInsecureRepositories "true";
      Acquire::AllowDowngradeToInsecureRepositories "true";
    dest: /etc/apt/apt.conf.d/99allowUnauthenticated
  when: apt_allow_unauthenticated|bool

- name: Be sure repo will be authenticated
  file:
    path: /etc/apt/apt.conf.d/99allowUnauthenticated
    state: absent
  when: not apt_allow_unauthenticated|bool

- name: Remove sources.list file
  file:
    path: "{{ item.path }}"
    state: "{{ item.state }}"
  with_items:
    - path: /etc/apt/sources.list
      state: absent
    - path: /etc/apt/sources.list~
      state: absent
    - path: /etc/apt/sources.list.save
      state: absent
    - path: /etc/apt/sources.list.d
      state: directory
  tags: apt-sources-list-config

- name: Create sources.list.d main files
  template:
    src: "etc/apt/sources.list.d/{{ item }}.list.j2"
    dest: "/etc/apt/sources.list.d/{{ item }}.list"
  with_items: "{{ apt_sources_list }}"
  tags: apt-sources-list-config
  notify:
    - apt update

- name: Create sources.list.d custom files
  copy:
    dest: "/etc/apt/sources.list.d/{{ item.dest }}"
    content: "{{ item.content }}"
  with_items: "{{ apt_custom_sources_list }}"
  tags: apt-sources-list-config
  notify:
    - apt update

- meta: flush_handlers

- name: Install some custom packages
  apt:
    name: "{{ apt_custom_packages_list }}"
    state: present

- name: Install eatmydata package
  apt:
    name: eatmydata
    state: present
  when: apt_eatmydata|bool

- name: Configure eatmydata package
  file:
    src=/usr/bin/eatmydata
    dest={{ item }}
    state=link
  with_items:
    - '/usr/local/bin/apt'
    - '/usr/local/bin/apt-get'
    - '/usr/local/bin/aptitude'
  when: apt_eatmydata|bool

- name: Configure Squid proxy
  apt:
    name: squid-deb-proxy-client
    state: present
  when: apt_squid_proxy|bool

- name: configure apt-proxy cache
  template:
    src: 'etc/apt/apt.conf.d/99proxy.j2'
    dest: '/etc/apt/apt.conf.d/99proxy'
